import 'package:bovitrack/core/models/livestock_model.dart';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

class MilkYieldForm extends StatefulWidget {
  final Function(MilkYield) onSave;
  final String animalId;

  const MilkYieldForm({
    Key? key,
    required this.onSave,
    required this.animalId,
  }) : super(key: key);

  @override
  State<MilkYieldForm> createState() => _MilkYieldFormState();
}

class _MilkYieldFormState extends State<MilkYieldForm> {
  final _formKey = GlobalKey<FormState>();
  final _litersController = TextEditingController();
  DateTime _selectedDate = DateTime.now();

  @override
  void dispose() {
    _litersController.dispose();
    super.dispose();
  }

  Future<void> _selectDate(BuildContext context) async {
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: _selectedDate,
      firstDate: DateTime(2000),
      lastDate: DateTime.now(),
    );
    if (picked != null && picked != _selectedDate) {
      setState(() {
        _selectedDate = picked;
      });
    }
  }

  void _submitForm() {
    if (_formKey.currentState!.validate()) {
      final yield = MilkYield(
        id: '', // This will be generated by Firebase
        timestamp: _selectedDate.millisecondsSinceEpoch,
        date: DateFormat('yyyy-MM-dd').format(_selectedDate),
        liters: double.parse(_litersController.text),
      );
      
      widget.onSave(yield);
      Navigator.of(context).pop();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.only(
        bottom: MediaQuery.of(context).viewInsets.bottom + 16,
        left: 8,
        right: 8,
        top: 8,
      ),
      child: SingleChildScrollView(
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              // Drag handle
              Center(
                child: Container(
                  width: 40,
                  height: 4,
                  margin: const EdgeInsets.only(bottom: 16),
                  decoration: BoxDecoration(
                    color: Colors.grey[300],
                    borderRadius: BorderRadius.circular(2),
                  ),
                ),
              ),
              Text(
                'New Milk Yield',
                style: Theme.of(context).textTheme.titleLarge,
              ),
              Text(
                'Animal ID: ${widget.animalId}',
                style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                  color: Colors.grey[600],
                ),
              ),
              const SizedBox(height: 24),
              // Date Picker
              TextFormField(
                controller: TextEditingController(
                  text: DateFormat('yyyy-MM-dd').format(_selectedDate)
                ),
                readOnly: true,
                decoration: InputDecoration(
                  labelText: 'Date',
                  hintText: 'Select date',
                  border: const OutlineInputBorder(),
                  suffixIcon: IconButton(
                    icon: const Icon(Icons.calendar_today),
                    onPressed: () => _selectDate(context),
                  ),
                ),
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _litersController,
                decoration: const InputDecoration(
                  labelText: 'Milk (Liters)',
                  border: OutlineInputBorder(),
                ),
                keyboardType: TextInputType.number,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter milk quantity';
                  }
                  try {
                    final liters = double.parse(value);
                    if (liters <= 0) {
                      return 'Please enter a valid quantity greater than 0';
                    }
                  } catch (e) {
                    return 'Please enter a valid number';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 04),
              Padding(
                padding: const EdgeInsets.only(top: 10, bottom: 2),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.end,
                  children: [
                    TextButton(
                      onPressed: () => Navigator.of(context).pop(),
                      child: const Text('Cancel'),
                    ),
                    const SizedBox(width: 10),
                    ElevatedButton(
                      onPressed: _submitForm,
                      child: const Text('Save'),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}